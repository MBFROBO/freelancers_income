import core

import sys, os
import signal, asyncio

from config import config


from rich.console import Console
from rich.panel import Panel
from rich.prompt import Prompt
from rich.text import Text
from rich import print as rprint

console = Console()

# —Ç–∞–∫ –∫–∞–∫ –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –≤–µ—Ä—Å–∏—è—Ö psycopg2 –µ—Å—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ DBAPI2, 
# –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –º–µ—à–∞—Ç—å –≤—ã–≤–æ–¥—É
# –∏ –Ω–µ –º–µ—à–∞—é—â–∏–µ —Ä–∞–±–æ—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã, –º—ã –∏—Ö –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
import warnings
warnings.filterwarnings('ignore', message='.*DBAPI2.*')

async def async_input(pid):
    user_prompt = Prompt.ask("[bold yellow]–í–∞—à –ø—Ä–æ–º–ø—Ç[/bold yellow]")
    if user_prompt.lower() == 'exit':
        console.print(Panel("[bold red]–í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã[/bold red]"))
        os.kill(pid, signal.SIGKILL)
    return user_prompt

async def main(pid):
    console.print(Panel(f"[bold cyan]–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –º–æ–¥–µ–ª–∏![/] üí°\n–í–µ—Ä—Å–∏—è: {config.VERSION} | –î–ª—è –≤—ã—Ö–æ–¥–∞ –≤–≤–µ–¥–∏—Ç–µ [bold]'exit'[/]"))

    while True:
        prompt = await async_input(pid)
        if prompt.lower() == 'exit':
            break

        with console.status("[green]–ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –º–æ–¥–µ–ª–∏...[/green]"):
            response = await core.Process_prompt(prompt).pipeline()

        console.print(Panel(Text("–ú–æ–¥–µ–ª—å:\n" + response, style="green"), title="[bold]–û—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏[/]"))
        console.print("[italic]–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç –∏–ª–∏ 'exit' –¥–ª—è –≤—ã—Ö–æ–¥–∞.[/italic]\n")

if __name__ == "__main__":
    pid = os.getpid()
    try:
        asyncio.run(main(pid))
    except KeyboardInterrupt:
        console.print("\n[bold red]–ü—Ä–æ–≥—Ä–∞–º–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤—Ä—É—á–Ω—É—é.[/red bold]")
    

    



    